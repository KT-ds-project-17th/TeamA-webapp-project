<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mySpring.springEx.common.pagination.mapper.PageMapper">
<resultMap id="surResult" type="surveyVO">
		<result property="survey_Id" column="survey_Id" />
		<result property="survey_Mem" column="survey_Mem" />
        <result property="survey_Title" column="survey_Title" />
        <result property="writeDate" column="writeDate" />
	</resultMap> 


	<select id="SelectAllList" resultMap="surResult">
         SELECT *
        FROM (
        SELECT ROW_NUMBER() OVER(ORDER by survey_id DESC) AS
        row_num
        ,survey_id
        ,survey_title
        ,survey_mem
        ,writedate
        FROM survey
        )
         <if test="firstRecordIndex !=null and lastRecordIndex != null">
            WHERE row_num BETWEEN #{firstRecordIndex} AND
            #{lastRecordIndex}
        </if>	 	
	</select>
	
	 <select id="testTableCount" resultType="int">
        SELECT count(*) FROM
        survey
    </select>
  
 
 <!-- courseTake pagination -->
 
 <resultMap id="courseTakeResult" type="courseTakeVO">
		<result property="userID" column="userID" />
		<result property="courseID" column="courseID" />
		<result property="courseTake_State" column="courseTake_State" />
		<result property="courseTake_ApplyDate"
			column="courseTake_ApplyDate" />
		<result property="courseTake_CompleteDate"
			column="courseTake_CompleteDate" />
		<!-- join 할 VO를 데이터매핑 -->
		<collection property="memberVO" javaType="MemberVO">
		<id property="userId" column="userId" />
		<result property="userName" column="userName" />
		<result property="userPhoneNumber" column="userPhoneNumber" />
		<result property="userEmail" column="userEmail" />
		<result property="userCompany" column="userCompany" />
		</collection>
	</resultMap>
	

	<select id="selectAllCourseApplyList" resultMap="courseTakeResult">
		<!-- 원래 두번째 m.userEmail 대신 course의 과정명, -->
         <![CDATA[
            select m.userId, m.userName, m.userPhoneNumber, m.userCompany,
            m.userEmail, c.courseTake_State, courseTake_ApplyDate
            from course_Take c join kt_user2 m on (c.userID = m.userId)
            order by courseTake_ApplyDate desc
         ]]>
	</select>
	
	 <select id="testTableCountCT" resultType="int">
        SELECT count(*) FROM course_take
        
    </select>
 
 	<!--   <select id="loginById"  resultType="memberVO"   parameterType="memberVO" >
	<![CDATA[
		select * from t_member	
		where id=#{id} and pwd=#{pwd}		
	]]>
  </select> -->
</mapper>
